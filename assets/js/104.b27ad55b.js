(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{992:function(t,a,s){"use strict";s.r(a);var r=s(106),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ioc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ioc"}},[t._v("#")]),t._v(" IoC")]),t._v(" "),s("p",[t._v("控制反转（Inversion of Control）")]),t._v(" "),s("h2",{attrs:{id:"一、特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、特点"}},[t._v("#")]),t._v(" 一、特点")]),t._v(" "),s("ol",[s("li",[t._v("依托一个类似工厂的IoC容器")]),t._v(" "),s("li",[t._v("将对象的创建、依赖关系的管理以及声明周期交由IoC容器管理")]),t._v(" "),s("li",[t._v("降低系统在实现上的复杂性和耦合度，易于扩展，满足开闭原则")])]),t._v(" "),s("h2",{attrs:{id:"二、依赖注入-dependency-injection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、依赖注入-dependency-injection"}},[t._v("#")]),t._v(" 二、依赖注入（Dependency Injection）")]),t._v(" "),s("p",[t._v("上层建筑决定下层注入")]),t._v(" "),s("h3",{attrs:{id:"方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式"}},[t._v("#")]),t._v(" 方式：")]),t._v(" "),s("ol",[s("li",[t._v("Setter")]),t._v(" "),s("li",[t._v("Interface")]),t._v(" "),s("li",[t._v("Constructor")]),t._v(" "),s("li",[t._v("Annotation")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://imgtu.com/i/fleoNR",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://z3.ax1x.com/2021/08/08/fleoNR.md.png",alt:"fleoNR.md.png"}}),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"三、ioc容器优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、ioc容器优势"}},[t._v("#")]),t._v(" 三、IoC容器优势")]),t._v(" "),s("ol",[s("li",[t._v("避免在各处使用new来创建类，并且可以做到统一维护")]),t._v(" "),s("li",[t._v("创建实例的时候不需要了解其中的细节")]),t._v(" "),s("li",[t._v("反射+工厂模式的合体，满足开闭原则")])]),t._v(" "),s("h2",{attrs:{id:"四、框架基本功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、框架基本功能"}},[t._v("#")]),t._v(" 四、框架基本功能")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://imgtu.com/i/fGIJRx",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://z3.ax1x.com/2021/08/10/fGIJRx.md.jpg",alt:"fGIJRx.md.jpg"}}),s("OutboundLink")],1)]),t._v(" "),s("ol",[s("li",[t._v("解析配置")]),t._v(" "),s("li",[t._v("定位与注册对象")]),t._v(" "),s("li",[t._v("注入对象")]),t._v(" "),s("li",[t._v("提供通用工具类")])]),t._v(" "),s("h3",{attrs:{id:"_1、ioc容器的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、ioc容器的实现"}},[t._v("#")]),t._v(" 1、IOC容器的实现")]),t._v(" "),s("ol",[s("li",[t._v("创建对象")]),t._v(" "),s("li",[t._v("提取标记对象\n"),s("ol",[s("li",[t._v("指定范围，获取范围内的所有类\n"),s("ol",[s("li",[t._v("获取到"),s("code",[t._v("类加载器")]),t._v("（目的：获取项目发布的实际路径）")]),t._v(" "),s("li",[t._v("通过类加载器获取到加载的资源信息")]),t._v(" "),s("li",[t._v("依据不同的资源类型，采用不同的方式获取资源的集合")])])]),t._v(" "),s("li",[t._v("遍历所有类，获取被注解标记的类并加载进容器里")])])]),t._v(" "),s("li",[t._v("实现容器")]),t._v(" "),s("li",[t._v("依赖注入")])]),t._v(" "),s("h3",{attrs:{id:"_2、涉及知识点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、涉及知识点"}},[t._v("#")]),t._v(" 2、涉及知识点")]),t._v(" "),s("h4",{attrs:{id:"类加载器-classloader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类加载器-classloader"}},[t._v("#")]),t._v(" 类加载器 ClassLoader")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://imgtu.com/i/fG7VJA",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://z3.ax1x.com/2021/08/10/fG7VJA.md.png",alt:"fG7VJA.md.png"}}),s("OutboundLink")],1)]),t._v(" "),s("ol",[s("li",[t._v("根据一个指定的类的名称，找到或者生成其对应的字节码")]),t._v(" "),s("li",[t._v("加载java应用所需资源")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContextClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#url"}},[t._v("#")]),t._v(" URL")]),t._v(" "),s("p",[t._v("统一资源定位符：某个资源的唯一地址")]),t._v(" "),s("ol",[s("li",[t._v("通过获取java.net.URL实例获取协议名、资源名路径等信息\n"),s("a",{attrs:{href:"https://imgtu.com/i/fJ1Fv4",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://z3.ax1x.com/2021/08/10/fJ1Fv4.md.png",alt:"fJ1Fv4.md.png"}}),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"_3、实现容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、实现容器"}},[t._v("#")]),t._v(" 3、实现容器")]),t._v(" "),s("p",[t._v("容器的组成部分")]),t._v(" "),s("ol",[s("li",[t._v("保存Class对象及其实例的载体 -> ConcurrentHashMap")]),t._v(" "),s("li",[t._v("容器的加载\n"),s("ol",[s("li",[t._v("配置的管理与获取")]),t._v(" "),s("li",[t._v("获取指定范围内的Class对象")]),t._v(" "),s("li",[t._v("依据配置提取Class对象，连同实例一并存入容器")])])]),t._v(" "),s("li",[t._v("容器的操作方式\n"),s("ol",[s("li",[t._v("增加、删除操作")]),t._v(" "),s("li",[t._v("根据Class获取对应实例")]),t._v(" "),s("li",[t._v("获取所有的Class和实例")]),t._v(" "),s("li",[t._v("通过注解来获取被注解标注的Class")]),t._v(" "),s("li",[t._v("通过超类获取对应的子类Class")]),t._v(" "),s("li",[t._v("获取容器载体保存的Class的数量")])])])]),t._v(" "),s("h4",{attrs:{id:"作用域-scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域-scope"}},[t._v("#")]),t._v(" 作用域 Scope")]),t._v(" "),s("ol",[s("li",[t._v("singleton")]),t._v(" "),s("li",[t._v("prototype")]),t._v(" "),s("li",[t._v("request")]),t._v(" "),s("li",[t._v("session")]),t._v(" "),s("li",[t._v("globalsession")])]),t._v(" "),s("h3",{attrs:{id:"_4、容器的依赖注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、容器的依赖注入"}},[t._v("#")]),t._v(" 4、容器的依赖注入")]),t._v(" "),s("h4",{attrs:{id:"一、实现思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、实现思路"}},[t._v("#")]),t._v(" 一、实现思路")]),t._v(" "),s("ol",[s("li",[t._v("定义相关的注解标签")]),t._v(" "),s("li",[t._v("实现创建被注解标记的成员变量实例，并将其注入到成员变量里\n"),s("ol",[s("li",[t._v("遍历Bean容器中所有的Class对象")]),t._v(" "),s("li",[t._v("遍历Class对象的所有成员变量")]),t._v(" "),s("li",[t._v("找出被Autowired标记的成员变量")]),t._v(" "),s("li",[t._v("获取这些成员变量的类型")]),t._v(" "),s("li",[t._v("获取这些成员变量的类型在容器里对应的实例")]),t._v(" "),s("li",[t._v("通过反射将对应的成员变量实例注入到成员变量所在类的实例里")]),t._v(" "),s("li",[t._v("解决同一个类型有多种实现类的情况")])])]),t._v(" "),s("li",[t._v("依赖注入的使用")])]),t._v(" "),s("hr"),t._v(" "),s("p",[s("a",{attrs:{href:"https://imgtu.com/i/ffWspj",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://z3.ax1x.com/2021/08/16/ffWspj.md.png",alt:"ffWspj.md.png"}}),s("OutboundLink")],1)]),t._v(" "),s("ad"),t._v(" "),s("comment")],1)}),[],!1,null,null,null);a.default=_.exports}}]);