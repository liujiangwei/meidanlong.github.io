(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{996:function(s,e,t){"use strict";t.r(e);var r=t(106),a=Object(r.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"spring装载bean-实例化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring装载bean-实例化"}},[s._v("#")]),s._v(" Spring装载Bean - 实例化")]),s._v(" "),t("h2",{attrs:{id:"一、postprocessor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、postprocessor"}},[s._v("#")]),s._v(" 一、PostProcessor")]),s._v(" "),t("ol",[t("li",[s._v("本身也是一种需要注册到容器里的Bean")]),s._v(" "),t("li",[s._v("其里面的方法会在特定的时机被容器调用")]),s._v(" "),t("li",[s._v("实现不改变容器获取Bean核心逻辑的情况下对Bean进行扩展。如：对Bean进行包装，影响其行为、修改Bean的内容等")])]),s._v(" "),t("p",[s._v("大类分为容器级别的后置处理器以及Bean级别的后置处理器")]),s._v(" "),t("ol",[t("li",[s._v("BeanDefinitionRegistryPostProcessor")]),s._v(" "),t("li",[s._v("BeanFactoryPostProcessor")]),s._v(" "),t("li",[s._v("BeanPostProcessor")])]),s._v(" "),t("ad"),s._v(" "),t("comment")],1)}),[],!1,null,null,null);e.default=a.exports}}]);