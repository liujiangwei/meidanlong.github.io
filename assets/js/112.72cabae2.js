(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{1001:function(t,a,r){"use strict";r.r(a);var s=r(106),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"第一章-springcloud预览"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第一章-springcloud预览"}},[t._v("#")]),t._v(" 第一章：springcloud预览")]),t._v(" "),r("h2",{attrs:{id:"一-eureka"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-eureka"}},[t._v("#")]),t._v(" 一. Eureka")]),t._v(" "),r("ul",[r("li",[t._v("提供服务注册和发现")]),t._v(" "),r("li",[t._v("Eureka 包含两个组件：Eureka Server 和 Eureka Client")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://s2.ax1x.com/2020/03/01/3ghT9P.md.png",alt:"1-1"}})]),t._v(" "),r("h3",{attrs:{id:"_1-eureka-server"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-eureka-server"}},[t._v("#")]),t._v(" 1. Eureka Server")]),t._v(" "),r("ul",[r("li",[t._v("节点间同步复制源信息，保证各节点中源信息统一")])]),t._v(" "),r("h3",{attrs:{id:"_2-eureka-client"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-eureka-client"}},[t._v("#")]),t._v(" 2. Eureka Client")]),t._v(" "),r("ul",[r("li",[t._v("Eureka Client 在注册之后会向 Eureka Server 发起连接")]),t._v(" "),r("li",[t._v("将源信息发送给 Eureka Server")])]),t._v(" "),r("h4",{attrs:{id:"_2-1-服务注册"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-服务注册"}},[t._v("#")]),t._v(" 2.1 服务注册")]),t._v(" "),r("h4",{attrs:{id:"_2-2-心跳续约"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-心跳续约"}},[t._v("#")]),t._v(" 2.2 心跳续约")]),t._v(" "),r("h4",{attrs:{id:"_2-3-下线"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-下线"}},[t._v("#")]),t._v(" 2.3 下线")]),t._v(" "),r("h3",{attrs:{id:"_3-源信息"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-源信息"}},[t._v("#")]),t._v(" 3. 源信息")]),t._v(" "),r("ul",[r("li",[t._v("Eureka Client 注册到 Eureka Server 上的信息")]),t._v(" "),r("li",[t._v("采用两层的hashMap保存")])]),t._v(" "),r("h2",{attrs:{id:"二-zuul"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-zuul"}},[t._v("#")]),t._v(" 二. Zuul")]),t._v(" "),r("ul",[r("li",[t._v("Zuul 是一个 API Gateway 服务器，本质上是一个web Servlet 应用")]),t._v(" "),r("li",[t._v("Zuul 提供了动态路由、监控等服务，这些功能实现的核心是一系列的 filters")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://s2.ax1x.com/2020/03/01/3g5kxf.md.png",alt:"1-2"}})]),t._v(" "),r("h3",{attrs:{id:"_1-pre-filters"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-pre-filters"}},[t._v("#")]),t._v(" 1. pre filters")]),t._v(" "),r("ul",[r("li",[t._v("在请求 "),r("code",[t._v("被路由之前")]),t._v(" 调用")]),t._v(" "),r("li",[t._v("利用这种过滤器可实现：身份验证、在集群中选择请求的微服务、记录调试信息 等")])]),t._v(" "),r("h3",{attrs:{id:"_2-routing-filters"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-routing-filters"}},[t._v("#")]),t._v(" 2. routing filters")]),t._v(" "),r("ul",[r("li",[t._v("请求对应的微服务，微服务的结果返回给 routing filters")])]),t._v(" "),r("h3",{attrs:{id:"_3-post-filters"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-post-filters"}},[t._v("#")]),t._v(" 3. post filters")]),t._v(" "),r("ul",[r("li",[t._v("路由到微服务以后执行")]),t._v(" "),r("li",[t._v("可用来：为响应添加标准的HTTP头、收集统计信息和指标、将微服务相应返回给客户端 等")])]),t._v(" "),r("h3",{attrs:{id:"_4-error-filters"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-error-filters"}},[t._v("#")]),t._v(" 4. error filters")]),t._v(" "),r("ul",[r("li",[t._v("在HTTP请求过程中随时会调用")])]),t._v(" "),r("h3",{attrs:{id:"_5-custom-filters"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-custom-filters"}},[t._v("#")]),t._v(" 5. custom filters")]),t._v(" "),r("ul",[r("li",[t._v("自定义过滤器")])]),t._v(" "),r("h2",{attrs:{id:"三-ribbon"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-ribbon"}},[t._v("#")]),t._v(" 三. Ribbon")]),t._v(" "),r("ul",[r("li",[t._v("负载均衡项目")]),t._v(" "),r("li",[t._v("Ribbon 包括了两个部分：负载均衡算法 + app_name 到具体的 ip:port 映射")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://s2.ax1x.com/2020/03/01/3gH1Df.md.png",alt:"1-3"}})]),t._v(" "),r("h2",{attrs:{id:"四-feign"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-feign"}},[t._v("#")]),t._v(" 四. Feign")]),t._v(" "),r("ul",[r("li",[t._v("依赖于Ribbon")]),t._v(" "),r("li",[t._v("整合了Hystrix，实现熔断降级的功能")]),t._v(" "),r("li",[t._v("定义接口，并在接口上添加注解，消费者通过调用接口的形式进行服务消费")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://s2.ax1x.com/2020/03/01/3gH2G9.md.png",alt:"1-4"}})]),t._v(" "),r("h2",{attrs:{id:"五-hystrix"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-hystrix"}},[t._v("#")]),t._v(" 五. Hystrix")]),t._v(" "),r("h3",{attrs:{id:"_1-主要解决问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-主要解决问题"}},[t._v("#")]),t._v(" 1. 主要解决问题")]),t._v(" "),r("h4",{attrs:{id:"_1-1-服务雪崩"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-服务雪崩"}},[t._v("#")]),t._v(" 1.1 服务雪崩")]),t._v(" "),r("ul",[r("li",[t._v("服务提供者的不可用，导致服务消费者的不可用，并将不可用逐渐放大的过程，最终导致整个系统的服务瘫痪")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://s2.ax1x.com/2020/03/01/3gqkkD.md.png",alt:"1-5"}})]),t._v(" "),r("h3",{attrs:{id:"_2-三个特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-三个特性"}},[t._v("#")]),t._v(" 2. 三个特性")]),t._v(" "),r("h4",{attrs:{id:"_2-1-断路器机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-断路器机制"}},[t._v("#")]),t._v(" 2.1 断路器机制")]),t._v(" "),r("ul",[r("li",[t._v("当 Hystrix Command 请求后端服务失败数量超过一个阈值比例（默认50%），断路器就会切换到开路状态")])]),t._v(" "),r("h4",{attrs:{id:"_2-2-fallback"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-fallback"}},[t._v("#")]),t._v(" 2.2 Fallback")]),t._v(" "),r("ul",[r("li",[t._v("降级回滚策略")]),t._v(" "),r("li",[t._v("请求失败有一个兜底的返回")])]),t._v(" "),r("h4",{attrs:{id:"_2-3-资源隔离"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-资源隔离"}},[t._v("#")]),t._v(" 2.3 资源隔离")]),t._v(" "),r("ul",[r("li",[t._v("不通的微服务调用使用不同的线程池来管理\n"),r("img",{attrs:{src:"https://s2.ax1x.com/2020/03/01/3gLDqP.md.png",alt:"1-6"}})])]),t._v(" "),r("ad"),t._v(" "),r("comment")],1)}),[],!1,null,null,null);a.default=_.exports}}]);