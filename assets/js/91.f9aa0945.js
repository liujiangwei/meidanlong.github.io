(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{978:function(t,_,e){"use strict";e.r(_);var v=e(106),r=Object(v.a)({},(function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"reactor框架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reactor框架"}},[t._v("#")]),t._v(" Reactor框架")]),t._v(" "),e("h2",{attrs:{id:"一-核心api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-核心api"}},[t._v("#")]),t._v(" 一. 核心API")]),t._v(" "),e("h3",{attrs:{id:"_1-mono"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-mono"}},[t._v("#")]),t._v(" 1. Mono")]),t._v(" "),e("p",[e("strong",[t._v("定义：")]),t._v(" 0-1 的非阻塞结果")]),t._v(" "),e("p",[e("strong",[t._v("实现：")]),t._v(" Reactive Streams JVM API "),e("code",[t._v("Publisher")])]),t._v(" "),e("p",[e("strong",[t._v("类比：")]),t._v(" 非阻塞Optional")]),t._v(" "),e("p",[e("strong",[t._v("类似模式：")]),t._v(" 点对点模式")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://s2.ax1x.com/2020/01/15/lOXaCQ.png",alt:"96-1"}})]),t._v(" "),e("p",[e("strong",[t._v("图解：")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://s2.ax1x.com/2020/01/15/lOXLPe.md.png",alt:"96-2"}})]),t._v(" "),e("h3",{attrs:{id:"_2-flux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-flux"}},[t._v("#")]),t._v(" 2. Flux")]),t._v(" "),e("p",[e("strong",[t._v("定义：")]),t._v(" 0-N 的非阻塞序列")]),t._v(" "),e("p",[e("strong",[t._v("实现：")]),t._v(" Reactive Streams JVM API Publisher")]),t._v(" "),e("p",[e("strong",[t._v("类比：")]),t._v(" 非阻塞"),e("code",[t._v("Stream")])]),t._v(" "),e("p",[e("strong",[t._v("类似模式：")]),t._v(" 发布者/订阅者模式")]),t._v(" "),e("p",[e("strong",[t._v("图解：")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://s2.ax1x.com/2020/01/15/lOvyhF.md.png",alt:"96-3"}})]),t._v(" "),e("h3",{attrs:{id:"_3-scheduler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-scheduler"}},[t._v("#")]),t._v(" 3. Scheduler")]),t._v(" "),e("p",[e("strong",[t._v("定义：")]),t._v(" Reactor 调度线程池")]),t._v(" "),e("ul",[e("li",[t._v("当前线程：Schedulers.immediate()\n"),e("ul",[e("li",[t._v("等价关系：Thread.currentThread()")])])]),t._v(" "),e("li",[t._v("单复用线程：Schedulers.single()\n"),e("ul",[e("li",[t._v('内部名称："single"')]),t._v(" "),e("li",[t._v('线程名称："single"')]),t._v(" "),e("li",[t._v("线程数量：单个")]),t._v(" "),e("li",[t._v("线程idel时间：Long Live")]),t._v(" "),e("li",[t._v("底层实现：ScheduledThreadPoolExecutor (core 1)")])])]),t._v(" "),e("li",[t._v("弹性线程池：Schedulers.elastic()\n"),e("ul",[e("li",[t._v('内部名称："elastic"')]),t._v(" "),e("li",[t._v('线程名称："elastic-evictor-{num}"')]),t._v(" "),e("li",[t._v("线程数量：无限制（unbounded）")]),t._v(" "),e("li",[t._v("线程idel时间：60 秒")]),t._v(" "),e("li",[t._v("底层实现：ScheduledThreadPoolExecutor")])])]),t._v(" "),e("li",[t._v("并行线程池：Schedulers.parallel()\n"),e("ul",[e("li",[t._v('内部名称："parallel"')]),t._v(" "),e("li",[t._v('线程名称："parallel-{num}"')]),t._v(" "),e("li",[t._v("线程数量：处理器数量")]),t._v(" "),e("li",[t._v("线程idel时间：60 秒")]),t._v(" "),e("li",[t._v("底层实现：ScheduledThreadPoolExecutor")])])])]),t._v(" "),e("ad"),t._v(" "),e("comment")],1)}),[],!1,null,null,null);_.default=r.exports}}]);